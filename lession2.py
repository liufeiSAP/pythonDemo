#########################列表(可以修改)和元组（不可以修改）########################################
list1 = ['google','runoob','197',2000]
list2 = [1, 2, 3, 4]
list3 = ["a", "b" , "c"]

tup1 = ('google','runoob','197',2000)
tup2 = (1, 2, 3, 4)
tup3 = ("a", "b" , "c")

print(list1)
print(tup1)

list4 = [list1, "fds"]
print(list4)

#序列： 列表和元组；   
#映射： 例如字典；
#集合： 不是序列也不是映射；

###########################索引######################################
str = "hello"

print(str[0])  # h

print(str[-1]) # 负数表示从后面数

print('hello'[2])  # 字符串字面值可以直接使用索引

test = input()[3]
print(test)  #如果一个函数调用返回一个序列，那么可以直接对返回结果进行索引操作


str = "hello \
world"
print(str)  



# 一个数乘以列表，表示重复列表多少次
endings = ['a','b'] + 3*['c'] \
+ ['d','d'] \

print(endings)

##############################分片###################################

list = ['a','b',45, "fds", "fdsaf", "fdsfsd"]

print(list[2:3])   # 注意是闭开区间, 2在，3不在

print(list[2:-1])  # 位置 2到位置-1，也是闭开区间

print(list[-3:])   # 从-3开始的所有元素

print(list[:3])    # 从开始到3的所有元素
 
#############################设置步长####################################

#如果步长是负数，需要序列的开头大于序列的结尾；如果步长是正数，需要开头小于结尾
print(list[1:5:2])  #1到5的步长是2的元素
print(list[5:1:-2])  #5到1的步长是2的元素

############################序列相加#####################################

print([1,2,3] + [4, 5, 6]) # 序列相加就是序列拼接到一起

#字符串可以拼接

#但是，不同类型不能拼接，字符串和列表不可以拼接

################################序列乘法##########################################
#序列乘法就是序列别重复N次

#################################python的内建值None###############################

#初始化一个长度是10的列表
seq = [None] * 10
print(seq)

#################################成员资格#########################################
#看指定值是否包含在序列中
str = "china lfdlsaj"
print("china" in str)

print(input() in str)

#################################长度，最小值，最大值##############################
#len: 包含元素的数量
#min: 最大值
#max: 最小值

list = [4,3,7,9,10]
print(len(list))
print(min(list))
print(max(list))
#################################python的“苦力”##############################





















































